{"version":3,"sources":["components/Navbar/Navbar.js","containers/HomeScreen/HomeScreen.js","store/actionTypes.js","store/actions.js","components/InputSearch/InputSearch.js","components/WeatherIcon/WeatherIcon.js","components/TempDeck/TempDeck.js","containers/WeatherScreen/WeatherScreen.js","components/Card/Card.js","utills/Pagination.js","containers/FavoriteScreen/FavoriteScreen.js","App.js","store/reducer.js","index.js"],"names":["Navbar","renderRoutes","id","nav","path","map","route","to","exact","activeClassName","className","HomeScreen","motion","div","exit","animate","initial","variants","in","opacity","x","out","SEARCH_RESULTS","GET_WEATHER","GET_WEEK_WEATHER","ADD_TO_FAVORITES","REMOVE_FROM_FAVORITES","SET_MESSAGE","API","getCityWeather","key","country","city","dispatch","a","axios","get","response","data","weather","type","payload","message","getFiveDaysWeather","InputSearch","props","useState","searchState","setSearchState","results","useSelector","state","inputResults","useDispatch","onSubmit","event","preventDefault","i","push","onChange","target","value","placeholder","length","result","onClick","onWeather","Key","Country","LocalizedName","WeatherIcon","icon","temp","TempDeck","weekForecasts","DailyForecasts","forcast","date","Date","toLocaleDateString","Temperature","Minimum","Value","Maximum","Math","random","WeatherScreen","weatherData","curWeather","messageData","useEffect","datetime","LocalObservationDateTime","toLocaleTimeString","toDateString","getState","current","favorites","find","element","WeatherText","Imperial","Card","desc","Pagination","pageNumbers","ceil","totalForecasts","forecastPerPage","page","paginate","changePage","FavoriteScreen","curPage","setCurPage","indexOfLastForecast","indexOfFirstForecast","currentForecasts","slice","favorite","App","component","initState","reducer","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fc1b8e6.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './Navbar.css';\r\n\r\nconst Navbar = () => {\r\n    const routes = [\r\n        {\r\n            id: 1,\r\n            nav: 'home',\r\n            path: '/'\r\n        },\r\n        {\r\n            id: 2,\r\n            nav: 'weather',\r\n            path: '/weather'\r\n        },\r\n        {\r\n            id: 3,\r\n            nav: 'favorite',\r\n            path: '/favorite'\r\n        }\r\n    ];\r\n    const renderRoutes = routes.map(route => {\r\n        return (\r\n            <li key={route.id}>\r\n                <NavLink to={`${route.path}`} exact activeClassName={'active'}>\r\n                    {route.nav === 'home' && <i className=\"fas fa-home\"></i>}\r\n                    {route.nav}\r\n                </NavLink>\r\n            </li>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={'navbar-main'}>\r\n                <div>\r\n                    <h3><i className=\"fas fa-umbrella fa-lg\"></i> AccuApp</h3>\r\n                </div>\r\n                <ul>\r\n                    {renderRoutes}\r\n                </ul>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\nimport './HomeScreen.css';\r\n\r\nconst HomeScreen = () => {\r\n    // Framer Motion Animation:\r\n    const pageTransition = {\r\n        in: {\r\n            opacity: 1,\r\n            x: 0\r\n        },\r\n        out: {\r\n            opacity: 0,\r\n            x: '-100vh'\r\n        }\r\n    };\r\n\r\n    return (\r\n        <motion.div exit={'out'} animate={'in'} initial={'out'} variants={pageTransition}>\r\n            <div className={'home-screen-main'}>\r\n                <h1>Weather App</h1>\r\n                <p>- Herolo project -</p>\r\n                <small>This weather app was built by using AccuWeather API and React (Inc Redux for state management, Router & Hooks).\r\n                </small>\r\n                <i className=\"fas fa-cloud-moon-rain fa-3x\"></i>\r\n            </div>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen;","export const SEARCH_RESULTS = 'SEARCH_RESULTS';\r\nexport const GET_WEATHER = 'GET_WEATHER';\r\nexport const GET_WEEK_WEATHER = 'GET_WEEK_WEATHER';\r\nexport const ADD_TO_FAVORITES = 'ADD_TO_FAVORITES';\r\nexport const REMOVE_FROM_FAVORITES = 'REMOVE_FROM_FAVORITES';\r\nexport const SET_MESSAGE = 'SET_MESSAGE';","import axios from 'axios';\r\nimport { SEARCH_RESULTS,\r\nGET_WEATHER,\r\nGET_WEEK_WEATHER,\r\nADD_TO_FAVORITES,\r\nREMOVE_FROM_FAVORITES,\r\nSET_MESSAGE\r\n } from './actionTypes';\r\nconst API = 'QidwYLl44OsOGVhVplccGGlYfXHvtp8L';\r\n\r\nexport const getCityCode = state => async dispatch => {\r\n    try {\r\n        const response = await axios.get(`https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${API}&q=${state}`);\r\n        const results = [];\r\n        for (let i = 0; i < 5; i++) {\r\n            if (response.data[i]) {\r\n                results.push(response.data[i]);\r\n            }\r\n        }\r\n        dispatch({\r\n            type: SEARCH_RESULTS,\r\n            payload: results\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SET_MESSAGE,\r\n            payload: error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getCityWeather = (key, country, city) => async dispatch => {\r\n    try {\r\n        const response = await axios.get(`https://dataservice.accuweather.com/currentconditions/v1/${key}?apikey=${API}`);\r\n        const data = {\r\n            weather: response.data,\r\n            country,\r\n            city\r\n        };\r\n        dispatch({\r\n            type: GET_WEATHER,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SET_MESSAGE,\r\n            payload: error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getFiveDaysWeather = key => async dispatch => {\r\n    try {\r\n        const response = await axios.get(`https://dataservice.accuweather.com/forecasts/v1/daily/5day/${key}?apikey=${API}`)\r\n        dispatch({\r\n            type: GET_WEEK_WEATHER,\r\n            payload: response.data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SET_MESSAGE,\r\n            payload: error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const addToFavorites = () => (dispatch, getState) => {\r\n    const current = getState().curWeather;\r\n    const favorites = getState().favorites;\r\n\r\n    const isExist = favorites.find(element => element.city === current.city);\r\n    if (isExist) {\r\n        return dispatch({\r\n            type: SET_MESSAGE,\r\n            payload: 'City already in your favorite list'\r\n        })\r\n    }\r\n    dispatch({\r\n        type: ADD_TO_FAVORITES,\r\n        payload: current,\r\n        message: 'City added to your favorite list'\r\n    })\r\n}\r\n\r\nexport const removeFromFavorites = city => dispatch => {\r\n    dispatch({\r\n        type: REMOVE_FROM_FAVORITES,\r\n        payload: city\r\n    })\r\n}","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getCityCode } from '../../store/actions';\r\n\r\nimport './InputSearch.css';\r\n\r\nconst InputSearch = props => {\r\n    const [searchState, setSearchState] = useState('');\r\n    const results = useSelector(state => state.inputResults);\r\n    const dispatch = useDispatch();\r\n\r\n    const updateState = event => setSearchState(event.target.value);\r\n\r\n    const getResults = event => {\r\n        event.preventDefault();\r\n        dispatch(getCityCode(searchState));\r\n        setSearchState('');\r\n    }\r\n\r\n    return (\r\n        <div className={'input-search-main'}>\r\n            <form className={'input-search-form'} onSubmit={getResults}>\r\n                <input type={'text'} \r\n                    onChange={updateState} \r\n                    value={searchState} \r\n                    placeholder={'City...'}\r\n                />\r\n                <button type={'submit'}>Search</button>\r\n            </form>\r\n            <ul>\r\n                {results.length > 0 && results.map(result => {\r\n                    return (\r\n                        <li key={result.Key} \r\n                            onClick={() => props.onWeather(result.Key, result.Country.LocalizedName, result.LocalizedName)}>\r\n                            <p>{result.LocalizedName}</p>\r\n                            <small>{result.Country.LocalizedName}</small>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputSearch;","import React from 'react';\r\n\r\nimport './WeatherIcon.css';\r\n\r\nconst WeatherIcon = props => {\r\n    const temp = props.temp;\r\n    const cloudShowersHeavy = <i className=\"fas fa-cloud-showers-heavy fa-3x\"></i>\r\n    const cloudSunRain = <i className={'fas fa-cloud-sun-rain fa-3x'}></i>\r\n    const cloudSun = <i className=\"fas fa-cloud-sun fa-3x\"></i>\r\n    const sun = <i className=\"fas fa-sun fa-3x\"></i>\r\n\r\n    let icon;\r\n    if (temp < 50) {\r\n        icon = cloudShowersHeavy;\r\n    } else if (temp < 61) {\r\n        icon = cloudSunRain;\r\n    } else if (temp < 75) {\r\n        icon = cloudSun;\r\n    } else {\r\n        icon = sun;\r\n    }\r\n\r\n    return (\r\n        <div className={'weather-icon-main'}>\r\n            {icon}\r\n        </div>\r\n    )\r\n}\r\nexport default WeatherIcon;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport WeatherIcon from '../WeatherIcon/WeatherIcon';\r\n\r\nimport './TempDeck.css';\r\n\r\nconst TempDeck = () => {\r\n    const weekForecasts = useSelector(state => state.weekForecasts);\r\n\r\n    return (\r\n        <div className={'tempdeck-main'}>\r\n            {weekForecasts.DailyForecasts?.length > 0 ? weekForecasts.DailyForecasts.map(forcast => {\r\n                const date = new Date(forcast.Date);\r\n                return (\r\n                    <div key={Math.random()} className={'tempdeck-main-card'}>\r\n                        <p>{date.toLocaleDateString()}</p>\r\n                        <WeatherIcon temp={forcast.Temperature.Minimum.Value}/>\r\n                        <p>{`Min ${forcast.Temperature.Minimum.Value}F - Max ${forcast.Temperature.Maximum.Value}F`}</p>\r\n                    </div>\r\n                )\r\n            }): null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TempDeck;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCityWeather, getFiveDaysWeather, addToFavorites } from '../../store/actions';\r\nimport { motion } from 'framer-motion';\r\nimport InputSearch from '../../components/InputSearch/InputSearch';\r\nimport TempDeck from '../../components/TempDeck/TempDeck';\r\n\r\nimport './WeatherScreen.css';\r\n\r\nconst WeatherScreen = () => {\r\n    const weatherData = useSelector(state => state.curWeather);\r\n    const messageData = useSelector(state => state.message);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getCityWeather('215854', 'Israel', 'Tel Aviv'));\r\n        dispatch(getFiveDaysWeather('215854'));\r\n    }, []);\r\n\r\n    const getWeather = (key, country, city) => {\r\n        dispatch(getCityWeather(key, country, city));\r\n        dispatch(getFiveDaysWeather(key));\r\n    }\r\n\r\n    const favoriteHandler = () => {\r\n        dispatch(addToFavorites());\r\n    }\r\n\r\n    let datetime;\r\n    if (weatherData) {\r\n        datetime = new Date(weatherData.weather[0].LocalObservationDateTime);\r\n    }\r\n\r\n    let message;\r\n    if (messageData !== '') {\r\n        message = <p className={'weather-screen-message'}>{messageData}</p>     \r\n    }\r\n\r\n    // Framer Motion Animation:\r\n    const pageTransition = {\r\n        in: {\r\n            opacity: 1,\r\n            x: 0\r\n        },\r\n        out: {\r\n            opacity: 0,\r\n            x: '-100vh'\r\n        }\r\n    };\r\n\r\n    return (\r\n        <motion.div exit={'out'} animate={'in'} initial={'out'} variants={pageTransition}>\r\n            {message}\r\n            <div className={'weather-screen-main'}>\r\n                <div className={'flex-warrper'}>\r\n                    <div>\r\n                        <h3>{datetime?.toLocaleTimeString()}</h3>\r\n                        <i className=\"fas fa-clock fa-2x\"></i>\r\n                        <small>{datetime?.toDateString()}</small>\r\n                    </div>\r\n                    <InputSearch onWeather={getWeather}/>\r\n                    <div>\r\n                        <h3>{weatherData?.country}</h3>\r\n                        <i onClick={favoriteHandler} className=\"fas fa-heart fa-2x\"></i>\r\n                        <small>{weatherData?.city}</small>\r\n                        <small>{weatherData?.weather[0].WeatherText}</small>\r\n                        <small>Now: {weatherData?.weather[0].Temperature.Imperial.Value}F</small>\r\n                    </div>            \r\n                </div>\r\n                <TempDeck />\r\n            </div>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default WeatherScreen;","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { removeFromFavorites } from '../../store/actions';\r\nimport WeatherIcon from '../WeatherIcon/WeatherIcon';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n    const dispatch = useDispatch();\r\n    const removeHandler = () => dispatch(removeFromFavorites(props.city));\r\n\r\n    return (\r\n        <div className={'card-main'}>\r\n            <div className={'card-icon'}><WeatherIcon temp={props.temp}/></div>\r\n            <div className={'card-details'}>\r\n                <p>{props.country}</p>\r\n                <p>- {props.desc} -</p>\r\n                <small>{`There is ${props.temp}F in ${props.city}`}</small>\r\n                <i onClick={removeHandler} className=\"fas fa-minus-square fa-lg\"></i>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport './Pagination.css';\r\n\r\nconst Pagination = props => {\r\n    const pageNumbers = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(props.totalForecasts.length / props.forecastPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    const changePage = (page) => {\r\n        props.paginate(page)\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <ul className={'pagination'}>\r\n                {pageNumbers.map(page => {\r\n                    return (\r\n                        <li key={page} onClick={() => changePage(page)}>\r\n                            <i className=\"fas fa-circle\"></i>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { motion } from 'framer-motion';\r\nimport Card from '../../components/Card/Card';\r\nimport Pagination from '../../utills/Pagination';\r\n\r\nimport './FavoriteScreen.css';\r\n\r\nconst FavoriteScreen = () => {\r\n    const favorites = useSelector(state => state.favorites);\r\n\r\n    // Fronted Pagination:\r\n    const [curPage, setCurPage] = useState(1);\r\n    const [forecastPerPage] = useState(6);\r\n\r\n    const indexOfLastForecast = curPage * forecastPerPage;\r\n    const indexOfFirstForecast = indexOfLastForecast - forecastPerPage;\r\n    const currentForecasts = favorites.slice(indexOfFirstForecast, indexOfLastForecast);\r\n\r\n    // Framer Motion Animation:\r\n    const pageTransition = {\r\n        in: {\r\n            opacity: 1,\r\n            x: 0\r\n        },\r\n        out: {\r\n            opacity: 0,\r\n            x: '-100vh'\r\n        }\r\n    };\r\n\r\n    return (\r\n        <motion.div exit={'out'} animate={'in'} initial={'out'} variants={pageTransition}>\r\n            <div className={'favorite-screen-main'}>\r\n                <div className={'favorite-screen-main-title'}>\r\n                    <h2>Favorite List</h2>\r\n                    <small>Keep track after your favorite areas</small>\r\n                </div>\r\n                <div className={'favorite-grid'}>\r\n                    {favorites.length > 0 ? (\r\n                        currentForecasts.map(favorite => {\r\n                            return (\r\n                                <Card key={Math.random()} \r\n                                country={favorite.country}\r\n                                city={favorite.city} \r\n                                temp={favorite.weather[0]?.Temperature.Imperial.Value || '24'}\r\n                                desc={favorite.weather[0]?.WeatherText}\r\n                                />\r\n                            )\r\n                        })\r\n                    ) : (null)}\r\n                </div>\r\n                {favorites && <Pagination paginate={page => setCurPage(page)} totalForecasts={favorites} forecastPerPage={forecastPerPage}/>}\r\n            </div>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default FavoriteScreen;","import { Route, Switch } from 'react-router-dom';\n\nimport Navbar from './components/Navbar/Navbar';\nimport HomeScreen from './containers/HomeScreen/HomeScreen';\nimport WeatherScreen from './containers/WeatherScreen/WeatherScreen';\nimport FavoriteScreen from './containers/FavoriteScreen/FavoriteScreen';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className={'app-main'}>\n      <Navbar />\n      <main>\n        <Switch>\n          <Route path={'/'} exact component={HomeScreen}/>\n          <Route path={'/weather'} component={WeatherScreen}/>\n          <Route path={'/favorite'} component={FavoriteScreen}/>\n        </Switch>\n      </main>\n      <div className={'author'}><p>Ido Adar</p></div>\n    </div>\n  );\n}\n\nexport default App;","import { SEARCH_RESULTS,\r\nGET_WEATHER,\r\nGET_WEEK_WEATHER,\r\nADD_TO_FAVORITES,\r\nREMOVE_FROM_FAVORITES,\r\nSET_MESSAGE\r\n } from './actionTypes';\r\n\r\nconst initState = {\r\n    curWeather: null,\r\n    inputResults: [],\r\n    weekForecasts: [],\r\n    favorites: [],\r\n    message: ''\r\n};\r\n\r\nconst reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case SEARCH_RESULTS:\r\n            return {\r\n                ...state,\r\n                inputResults: action.payload,\r\n                message: ''\r\n            }\r\n        case GET_WEATHER:\r\n            return {\r\n                ...state,\r\n                curWeather: action.payload,\r\n                inputResults: [],\r\n                message: ''\r\n            }\r\n        case GET_WEEK_WEATHER:\r\n            return {\r\n                ...state,\r\n                weekForecasts: action.payload,\r\n                message: ''\r\n            }\r\n        case ADD_TO_FAVORITES:\r\n            return {\r\n                ...state,\r\n                favorites: [ action.payload, ...state.favorites ],\r\n                message: action.message\r\n            }\r\n        case REMOVE_FROM_FAVORITES:\r\n            return {\r\n                ...state,\r\n                favorites: state.favorites.filter(favorite => favorite.city !== action.payload)\r\n            }\r\n        case SET_MESSAGE:\r\n            return {\r\n                ...state,\r\n                message: action.payload\r\n            }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// Router\nimport { BrowserRouter } from 'react-router-dom';\n\n// Redux\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport reducer from './store/reducer';\n\n// Devtool\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}